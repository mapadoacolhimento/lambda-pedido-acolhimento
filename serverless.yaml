service: support-request-api

frameworkVersion: "3"
useDotenv: true

package:
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'

custom:
  webpack:
    includeModules: true
    packagerOptions:
      scripts:
        - npx prisma generate
        - find . -name "libquery_engine-*" -not -name "libquery_engine-rhel-openssl-*" | xargs rm
  serverless-offline:
    httpPort: 5000
    ignoreJWTSignature: true
  newRelic:
    accountId: ${env:NEW_RELIC_ACCOUNT_ID}
    apiKey: ${env:NEW_RELIC_API_KEY}
    cloudWatchFilter: "*"
    nrRegion: 'eu'
    enableFunctionLogs: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION}
  httpApi:
    metrics: true
    cors: true
    authorizers:
      auth:
        type: request
        functionName: auth
        identitySource: $request.header.Authorization
  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    DATABASE_URL: ${env:DATABASE_URL}
    ZENDESK_SUBDOMAIN: ${env:ZENDESK_SUBDOMAIN}
    ZENDESK_API_USER: ${env:ZENDESK_API_USER}
    ZENDESK_API_TOKEN: ${env:ZENDESK_API_TOKEN}
    SECRET_KEY: ${env:SECRET_KEY}
    SECRET_IV: ${env:SECRET_IV}
    ENCRYPTION_METHOD: ${env:ENCRYPTION_METHOD}
    LOOPS_API_KEY: ${env:LOOPS_API_KEY}

functions:
  auth:
    handler: handler.auth

  compose:
    handler: handler.compose
    timeout: 30 # max timeout for api gateway
    events:
      - httpApi:
          path: /compose
          method: POST
          authorizer:
            name: auth
            type: request

  sign:
    handler: handler.sign
    events:
      - httpApi:
          path: /sign
          method: GET

  manualMatch:
    handler: handler.manualMatch
    timeout: 30
    events:
      - httpApi:
          path: /manual-match
          method: POST

  handleMatch:
    handler: handler.handleMatch
    timeout: 30
    events:
      - httpApi:
          path: /handle-match
          method: POST
          authorizer:
            name: auth
            type: request
  
  createMatch:
    handler: handler.createNewMatch
    timeout: 30
    events:
      - httpApi:
          path: /create-match
          method: POST
          authorizer:
            name: auth
            type: request

  feature-flag:
    handler: handler.featureFlag
    events:
      - httpApi:
          path: /feature-flag
          method: GET
          authorizer:
            name: auth
            type: request

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-newrelic-lambda-layers
